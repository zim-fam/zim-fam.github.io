{"version":3,"sources":["src/header.tsx","page/homepage.tsx","page/poem.tsx","App.tsx"],"names":["Header","title","children","navigation","useNavigation","View","Appbar","canGoBack","BackAction","onPress","goBack","Content","undefined","style","flex","paddingHorizontal","render_children","Homepage","Title","Paragraph","marginTop","Menu","Item","icon","navigate","tags","only_tags","words","map","x","filter","y","includes","tag","random_element","lo","hi","length","Math","floor","random","random_words","word","Poem","fillins","subject","Poem_Config","on_generate","React","set_tag","set_subject","TextInput","label","placeholder","value","onChangeText","join","Button","mode","t","tw","allowed_words","PoemPage","set_words","console","log","Divider","marginVertical","Stack","createStackNavigator","App","NavigationContainer","Navigator","headerMode","Screen","name","component"],"mappings":"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","file":"static/js/app.67b4b8d5.chunk.js","sourcesContent":["import * as React from 'react';\nimport { View, Text } from 'react-native';\nimport { Appbar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\n\nexport interface Header_Props {\n    title: string;\n    children?: JSX.Element[];\n}\n\nexport function Header({ title, children }: Header_Props) {\n    const navigation = useNavigation();\n    const render_children = (children: JSX.Element[]) => {\n        return (\n            <View style={{ flex: 1, paddingHorizontal: 20 }}>\n                {children}\n            </View>\n        );\n    }\n    \n    return (\n        <View>\n            <Appbar>\n                { navigation.canGoBack() ? <Appbar.BackAction onPress={() => navigation.goBack()}/> : null }\n                <Appbar.Content title={title}/>\n            </Appbar>\n            { children === undefined ? null : render_children(children) }\n        </View>\n    );\n}","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Header } from '../src/header';\nimport { useNavigation } from '@react-navigation/native';\nimport { Menu, Paragraph, Title } from 'react-native-paper';\n\nexport function Homepage() {\n\n    const navigation = useNavigation();\n\n    return (\n        <Header\n            title='Home'\n        >\n            <Title>\n                Available Tools\n            </Title>\n\n            <Paragraph>\n                Here is a list of developed tools for the Zimmer family.\n            </Paragraph>\n\n            <Paragraph>\n                By Matthew Zimmer\n            </Paragraph>\n\n            <View style={{ marginTop: 20 }}>\n                <Menu.Item icon=\"map\" onPress={() => navigation.navigate('SitePlanner')} title=\"Site Planner\" />\n                <Menu.Item icon=\"file\" onPress={() => navigation.navigate('Poem')} title=\"Poems\" />\n            </View>\n        </Header>\n    );\n}","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Header } from '../src/header';\nimport { Button, Divider, Paragraph, TextInput, Title } from 'react-native-paper';\nimport { useRoute } from '@react-navigation/native';\n\ntype tag = '' | 'sweet' | 'funny';\nconst tags: tag[] = ['', 'sweet', 'funny'];\n\ninterface tagged_word {\n    tag: tag;\n    word: string;\n}\n\ntype substitutions = tagged_word[][];\n\nfunction only_tags(words: substitutions, ... tags: tag[]) {\n    return words.map(x => x.filter(y => tags.includes(y.tag)));\n}\n\nfunction random_between(lo: number, hi: number) {\n    return Math.floor(Math.random() * (hi - lo) ) + lo;\n}\n\nfunction random_element<T>(x: T[]) {\n    return x[random_between(0, x.length)];\n}\n\nfunction random_words(words: substitutions) {\n    return words.map(x => random_element(x).word);\n}\n\nfunction is_tag(t: string): t is tag {\n    return tags.includes(t as tag);\n}\n\ninterface poem_props {\n    fillins: string[];\n    subject: string;\n}\n\nfunction Poem({ fillins, subject }: poem_props) {\n\n    return (\n        <View>\n            <Title>\n                An ode to my {subject}\n            </Title>\n\n            <Paragraph>\n                To my {fillins[0]} {subject}.\n            </Paragraph>\n\n            <Paragraph>\n                I know I've {fillins[1]} be {fillins[2]}.\n            </Paragraph>\n\n            <Paragraph>\n                I know I've {fillins[3]} be {fillins[4]}.\n            </Paragraph>\n\n            <Paragraph>\n                All cause I've you by my side.\n            </Paragraph>\n\n            <Paragraph>\n                To my {fillins[5]} {subject}.\n            </Paragraph>\n\n            <Paragraph>\n                I look back to my {fillins[6]} youth.\n            </Paragraph>\n\n            <Paragraph>\n                All the {fillins[7]} hours\n            </Paragraph>\n\n            <Paragraph>\n                You {fillins[8]} to me.\n            </Paragraph>\n\n            <Paragraph>\n                For which I'm {fillins[9]} {fillins[10]} for.\n            </Paragraph>\n\n            <Paragraph>\n                Thank you! I say for making me, me.\n            </Paragraph>\n\n            <Paragraph>\n                To my {fillins[11]} {subject}.\n            </Paragraph>\n\n            <Paragraph>\n                You act as my {fillins[12]} in life.\n            </Paragraph>\n\n            <Paragraph>\n                This is the {fillins[13]} I can do show,\n            </Paragraph>\n\n            <Paragraph>\n                you that truth. From your dear, Matthew.\n            </Paragraph>\n        </View>\n    );\n}\n\ninterface poem_config_props {\n    tags: tag[];\n    on_generate?: (s: string, t: tag) => void;\n}\n\nfunction Poem_Config({ tags, on_generate }: poem_config_props) {\n\n    const [tag, set_tag] = React.useState('');\n    const [subject, set_subject] = React.useState('mother');\n\n    return (\n        <View>\n            <TextInput\n                label='subject'\n                placeholder='mother'\n                value={subject}\n                onChangeText={x => set_subject(x)}\n            />\n            <TextInput\n                label='Tag'\n                placeholder={`Tags: ${tags.join(', ')}`}\n                value={tag}\n                onChangeText={x => set_tag(x)}\n            />\n            <Button mode='contained' onPress={() => {\n                if (is_tag(tag)) {\n                    on_generate?.(subject, tag);\n                }\n            }}>\n                Generate!\n            </Button>   \n        </View>\n    );\n}\n\nfunction tw(word: string, tag: tag): tagged_word {\n    return { word, tag };\n}\n\nconst allowed_words: substitutions = [\n    [tw('sweetest', ''), tw('sweetest', 'sweet'), tw('lovely', 'sweet'), tw('nice', 'sweet'), tw('kind', 'sweet'), tw('mean', 'funny'), tw('stinky', 'funny')],\n    [tw('never', ''), tw('never', 'sweet'), tw('always', 'funny')],\n    [tw('alone', ''), tw('alone', 'sweet'), tw('scared', 'sweet'), tw('mad', 'funny')],\n    [tw('never', ''), tw('never', 'sweet'), tw('always', 'funny')],\n    [tw('afraid', ''), tw('afraid', 'sweet'), tw('shocked', 'sweet'), tw('sad', 'funny')],\n    [tw('sweetest', ''), tw('sweetest', 'sweet'), tw('lovely', 'sweet'), tw('nice', 'sweet'), tw('kind', 'sweet'), tw('mean', 'funny'), tw('stinky', 'funny')],\n    [tw('playful', ''), tw('playful', 'sweet'), tw('fun', 'sweet'), tw('silly', 'funny')],\n    [tw('thankless', ''), tw('exhausting', 'sweet'), tw('thankless', 'sweet'), tw('silly', 'funny')],\n    [tw('devoted', ''), tw('devoted', 'sweet'), tw('slaved', 'funny')],\n    [tw('externally', ''), tw('externally', 'sweet'), tw('really', 'sweet'), tw('kinda', 'funny')],\n    [tw('grateful', ''), tw('grateful', 'sweet'), tw('happy', 'sweet'), tw('grateful', 'funny'), tw('upset', 'funny')],\n    [tw('sweetest', ''), tw('sweetest', 'sweet'), tw('lovely', 'sweet'), tw('nice', 'sweet'), tw('kind', 'sweet'), tw('mean', 'funny'), tw('stinky', 'funny')],\n    [tw('anchor', ''), tw('anchor', 'sweet'), tw('pain', 'funny')],\n    [tw('least', ''), tw('least', 'sweet'), tw('most', 'funny')],\n];\n\nexport function PoemPage() {\n\n    const [words, set_words] = React.useState<string[]>(random_words(only_tags(allowed_words, '')));\n    const [subject, set_subject] = React.useState('mother');\n\n    const update_poem = (subject: string, tag: tag) => {\n\n        console.log(subject);\n\n        set_subject(subject);\n        set_words(random_words(only_tags(allowed_words, tag)));\n    }\n\n    return (\n        <Header\n            title='Poem'\n        >\n            <Poem_Config\n                tags={tags}\n                on_generate={update_poem}\n            />\n            <Divider style={{ marginVertical: 10 }}/>\n            <Poem\n                fillins={words}\n                subject={subject}\n            />\n        </Header>\n    );\n}","import * as React from 'react';\nimport { View, Text } from 'react-native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Homepage } from './page/homepage';\nimport { PoemPage } from './page/poem';\n\n\nconst Stack = createStackNavigator();\n\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        headerMode='none'\n      >\n        <Stack.Screen name=\"Home\" component={Homepage} />\n        <Stack.Screen name=\"Poem\" component={PoemPage} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}"],"sourceRoot":""}