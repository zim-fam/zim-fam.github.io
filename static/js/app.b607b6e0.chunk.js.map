{"version":3,"sources":["src/header.tsx","page/homepage.tsx","App.tsx"],"names":["Header","title","children","navigation","useNavigation","View","Appbar","canGoBack","BackAction","onPress","goBack","Content","undefined","style","flex","paddingHorizontal","render_children","Homepage","Title","Paragraph","marginTop","Menu","Item","icon","navigate","Stack","createStackNavigator","App","NavigationContainer","Navigator","headerMode","Screen","name","component"],"mappings":"6KAUO,SAASA,EAAT,GAAoD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SACtBC,EAAaC,0BASnB,OACI,gBAACC,EAAA,EAAD,KACI,gBAACC,EAAA,EAAD,KACMH,EAAWI,YAAc,gBAACD,EAAA,EAAOE,WAAR,CAAmBC,QAAS,kBAAMN,EAAWO,YAAc,KACtF,gBAACJ,EAAA,EAAOK,QAAR,CAAgBV,MAAOA,UAEZW,IAAbV,EAAyB,KAdX,SAACA,GACrB,OACI,gBAACG,EAAA,EAAD,CAAMQ,MAAO,CAAEC,KAAM,EAAGC,kBAAmB,KACtCb,GAW6Bc,CAAgBd,I,+BCpBvD,SAASe,IAEZ,IAAMd,EAAaC,0BAEnB,OACI,gBAACJ,EAAD,CACIC,MAAM,QAEN,gBAACiB,EAAA,EAAD,wBAIA,gBAACC,EAAA,EAAD,iEAIA,gBAACA,EAAA,EAAD,0BAIA,gBAACd,EAAA,EAAD,CAAMQ,MAAO,CAAEO,UAAW,KACtB,gBAACC,EAAA,EAAKC,KAAN,CAAWC,KAAK,MAAMd,QAAS,kBAAMN,EAAWqB,SAAS,gBAAgBvB,MAAM,iBAC/E,gBAACoB,EAAA,EAAKC,KAAN,CAAWC,KAAK,OAAOd,QAAS,kBAAMN,EAAWqB,SAAS,SAASvB,MAAM,YCrBzF,IAAMwB,EAAQC,cAGC,SAASC,IACtB,OACE,gBAACC,EAAA,EAAD,KACE,gBAACH,EAAMI,UAAP,CACEC,WAAW,QAEX,gBAACL,EAAMM,OAAP,CAAcC,KAAK,OAAOC,UAAWhB,Q","file":"static/js/app.b607b6e0.chunk.js","sourcesContent":["import * as React from 'react';\nimport { View, Text } from 'react-native';\nimport { Appbar } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\n\nexport interface Header_Props {\n    title: string;\n    children?: JSX.Element[];\n}\n\nexport function Header({ title, children }: Header_Props) {\n    const navigation = useNavigation();\n    const render_children = (children: JSX.Element[]) => {\n        return (\n            <View style={{ flex: 1, paddingHorizontal: 20 }}>\n                {children}\n            </View>\n        );\n    }\n    \n    return (\n        <View>\n            <Appbar>\n                { navigation.canGoBack() ? <Appbar.BackAction onPress={() => navigation.goBack()}/> : null }\n                <Appbar.Content title={title}/>\n            </Appbar>\n            { children === undefined ? null : render_children(children) }\n        </View>\n    );\n}","import * as React from 'react';\nimport { View } from 'react-native';\nimport { Header } from '../src/header';\nimport { useNavigation } from '@react-navigation/native';\nimport { Menu, Paragraph, Title } from 'react-native-paper';\n\nexport function Homepage() {\n\n    const navigation = useNavigation();\n\n    return (\n        <Header\n            title='Home'\n        >\n            <Title>\n                Available Tools\n            </Title>\n\n            <Paragraph>\n                Here is a list of developed tools for the Zimmer family.\n            </Paragraph>\n\n            <Paragraph>\n                By Matthew Zimmer\n            </Paragraph>\n\n            <View style={{ marginTop: 20 }}>\n                <Menu.Item icon=\"map\" onPress={() => navigation.navigate('SitePlanner')} title=\"Site Planner\" />\n                <Menu.Item icon=\"file\" onPress={() => navigation.navigate('Poem')} title=\"Poems\" />\n            </View>\n        </Header>\n    );\n}","import * as React from 'react';\nimport { View, Text } from 'react-native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Homepage } from './page/homepage';\n\n\nconst Stack = createStackNavigator();\n\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        headerMode='none'\n      >\n        <Stack.Screen name=\"Home\" component={Homepage} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}"],"sourceRoot":""}